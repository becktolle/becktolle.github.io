---
title: "Practicing Your Tidyverse Skills: Combining Data Frames"
editor: visual
format: revealjs
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo=TRUE)
#install.packages("tidyverse")
library(tidyverse)
```

## Required packages and datasets

Run the code in the code chunk below to leoad the necessary dataset - `happy_full`

```{r}
#insta.packages("remotes")
#remotes::install_github("mathewhirschey/tidybiology", force=TRUE)
library(tidybiology)

data(happy)
data(happy_join_one)
data(happy_full)
```

## Please answer the following questions

## Take a look at the three data frames- `happy`, `happy_join_one`, and `happy_full`

```{r}
glimpse(happy)


```
## Take a look at the three data frames- `happy`, `happy_join_one`, and `happy_full` pt.2

```{r}
glimpse(happy_join_one)

```
## Take a look at the three data frames- `happy`, `happy_join_one`, and `happy_full` pt.3
```{r}
glimpse(happy_full)
```

## Combine `happy` and `happy_join_one` by row

```{r}
bind_rows(happy, happy_join_one)
```

## Combine `happy` and `happy_join_one` by column

Note: Check to see if this is even possible

```{r}
nrow(happy) == nrow(happy_join_one)

bind_cols(happy, happy_join_one)
```

## Which `join_*` function is a better alternative to the previous solution?

```{r}
happy %>%
  inner_join(happy_join_one)
```

## Filter out all countries from `happy_full` that are also in `happy`

```{r}
happy_full %>%
  anti_join(happy)

```
## Filter out all countries from `happy_full` that are also in `happy` pt. 2
```{r}

happy_full %>%
  filter(!country_name %in% happy$country_name)
```

